{"version":3,"file":"player.js","sourceRoot":"","sources":["../../src/library/player.ts"],"names":[],"mappings":"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","sourcesContent":["import { PlayerCore, ICoreOptions, ISoundAttributes } from '../../node_modules/web-audio-api-player/dist/index.js';\r\n\r\nexport interface IListenersOptions {\r\n    playPauseButtonElementId: string;\r\n    stopButtonElementId: string;\r\n    volumeSliderId: string;\r\n}\r\n\r\nexport class Player {\r\n\r\n    protected player: PlayerCore;\r\n    protected playerAudioContext: AudioContext;\r\n    protected isPlayOrPause: string;\r\n\r\n    constructor() {\r\n\r\n        const playerOptions: ICoreOptions = {\r\n            soundsBaseUrl: 'https://mp3l.jamendo.com/?trackid=',\r\n            playingProgressIntervalTime: 500,\r\n            loadSoundMode: PlayerCore.SOUND_MODE_AUDIO\r\n        };\r\n\r\n        const player = new PlayerCore(playerOptions);\r\n\r\n        this.player = player;\r\n\r\n        player.getAudioContext().then((audioContext: AudioContext) => {\r\n            this.playerAudioContext = audioContext;\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n\r\n        this.isPlayOrPause = 'pause';\r\n\r\n    }\r\n    \r\n    public loadSong(songId: number): void {\r\n\r\n        const songAttributes: ISoundAttributes = {\r\n            source: [{ url: songId + '&format=mp31', codec: 'mp3' }, { url: songId + '&format=ogg1', codec: 'ogg', isPreferred: true }],\r\n            id: songId,\r\n            onLoading: (loadingProgress, maximumValue, currentValue) => {\r\n                console.log('loading: ', loadingProgress, maximumValue, currentValue);\r\n            },\r\n            onPlaying: (playingProgress, maximumValue, currentValue) => {\r\n                console.log('playing: ', playingProgress, maximumValue, currentValue);\r\n                console.log('firstSound.duration: ', song.duration);\r\n            },\r\n            onStarted: (playTimeOffset) => {\r\n                console.log('started', playTimeOffset);\r\n            },\r\n            onPaused: (playTimeOffset) => {\r\n                console.log('paused', playTimeOffset);\r\n            },\r\n            onStopped: (playTimeOffset) => {\r\n                console.log('stopped', playTimeOffset);\r\n            },\r\n            onResumed: (playTimeOffset) => {\r\n                console.log('resumed', playTimeOffset);\r\n            },\r\n            onEnded: (willPlayNext) => {\r\n                console.log('ended', willPlayNext);\r\n                if (!willPlayNext) {\r\n                    this.stopAction();\r\n                }\r\n            }\r\n        };\r\n\r\n        const song = this.player.addSoundToQueue({ soundAttributes: songAttributes });\r\n\r\n    }\r\n\r\n    protected playPauseAction(): void {\r\n\r\n        if (this.isPlayOrPause === 'play') {\r\n            this.player.pause();\r\n            this.isPlayOrPause = 'pause';\r\n            document.getElementById('js-pause').classList.add('hidden');\r\n            document.getElementById('js-play').classList.remove('hidden');\r\n        } else {\r\n            this.player.play();\r\n            this.isPlayOrPause = 'play';\r\n            document.getElementById('js-pause').classList.remove('hidden');\r\n            document.getElementById('js-play').classList.add('hidden');\r\n        }\r\n\r\n    }\r\n\r\n    protected stopAction(): void {\r\n        this.player.stop();\r\n        this.isPlayOrPause = 'pause';\r\n    }\r\n\r\n    protected changeVolumeAction(volume: number): void {\r\n        this.player.setVolume(volume);\r\n    }\r\n\r\n    public initializeClickListeners(listenersOptions: IListenersOptions): void {\r\n\r\n        const playPauseButtonElement = document.getElementById(listenersOptions.playPauseButtonElementId);\r\n        const stopButtonElement = document.getElementById(listenersOptions.stopButtonElementId);\r\n        const volumdSlideElement = document.getElementById(listenersOptions.volumeSliderId);\r\n\r\n        playPauseButtonElement.addEventListener('click', () => {\r\n            this.playPauseAction();\r\n        });\r\n\r\n        playPauseButtonElement.addEventListener('touch', () => {\r\n            this.playPauseAction();\r\n        });\r\n\r\n        stopButtonElement.addEventListener('click', () => {\r\n            this.stopAction();\r\n        });\r\n\r\n        stopButtonElement.addEventListener('touch', () => {\r\n            this.stopAction();\r\n        });\r\n\r\n        volumdSlideElement.addEventListener('change', (event) => {\r\n            const targetElement = event.target as HTMLInputElement;\r\n            const volume = parseInt(targetElement.value);\r\n            this.changeVolumeAction(volume);\r\n        });\r\n\r\n    }\r\n\r\n    protected resumeAudioContext(): void {\r\n\r\n        if (this.playerAudioContext.state !== 'running') {\r\n\r\n            this.playerAudioContext.resume().then(() => {\r\n                console.log('audiocontext got resumed');\r\n            }).catch(() => {\r\n                console.log('resuming audiocontext failed');\r\n            });\r\n\r\n        }\r\n    }\r\n}\r\n"]}