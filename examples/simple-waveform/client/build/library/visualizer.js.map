{"version":3,"file":"visualizer.js","sourceRoot":"","sources":["../../src/library/visualizer.ts"],"names":[],"mappings":"AAAA,OAAO,EACH,QAAQ,GAIX,MAAM,8BAA8B,CAAA;AAQrC,MAAM,OAAO,iBAAiB;IAEhB,QAAQ,CAAU;IAE5B,YAAY,iBAAqC;QAE7C,MAAM,iBAAiB,GAAuB;YAC1C,iBAAiB,EAAE,EAAE;SACxB,CAAA;QAED,MAAM,eAAe,GAAqB;YACtC,MAAM,EAAE,iBAAiB;YACzB,2BAA2B;YAC3B,IAAI,EAAE,iBAAiB,CAAC,YAAY;YACpC,qBAAqB,EAAE,iBAAiB,CAAC,qBAAqB;SACjE,CAAA;QAED,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC,CAAA;QAE9C,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QAExB,MAAM,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,eAAe,CAAsB,CAAA;QAErG,QAAQ,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAA;QAExC,MAAM,iBAAiB,GAAG,QAAQ,CAAC,gBAAgB,EAAE,CAAA;QAErD,MAAM,sBAAsB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CAAA;QAE/E,sBAAsB,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;QAChD,sBAAsB,CAAC,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAAA;QAE7C,MAAM,yBAAyB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,GAAG,CAAC,CAAA;QAEpF,yBAAyB,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;QACnD,yBAAyB,CAAC,YAAY,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAA;QAEnD,MAAM,8BAA8B,GAAG,KAAK,CAAA;QAC5C,MAAM,iCAAiC,GAAG,QAAQ,CAAA;QAElD,QAAQ,CAAC,gBAAgB,CAAC;YACtB,gBAAgB,EAAE,sBAAsB;YACxC,mBAAmB,EAAE,yBAAyB;YAC9C,wBAAwB,EAAE,8BAA8B;YACxD,2BAA2B,EAAE,iCAAiC;SACjE,CAAC,CAAA;IAEN,CAAC;IAEM,IAAI,CAAC,eAAuB;QAE/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,eAAe,CAAC,CAAA;IAEvC,CAAC;CAEJ","sourcesContent":["import {\n    Waveform,\n    IWaveLayoutOptions,\n    IWaveCoreOptions,\n    IWaveClickCallback,\n} from '../../../../../dist/index.js'\n\nexport interface IVisualizerOptions {\n    waveformData: number[]\n    canvasElementId: string\n    waveformClickCallback: IWaveClickCallback\n}\n\nexport class VisualizerExample {\n\n    protected waveform: Waveform\n\n    constructor(visualizerOptions: IVisualizerOptions) {\n\n        const waveLayoutOptions: IWaveLayoutOptions = {\n            waveTopPercentage: 50,\n        }\n\n        const waveCoreOptions: IWaveCoreOptions = {\n            layout: waveLayoutOptions,\n            // tslint:disable-next-line\n            data: visualizerOptions.waveformData,\n            waveformClickCallback: visualizerOptions.waveformClickCallback,\n        }\n\n        const waveform = new Waveform(waveCoreOptions)\n\n        this.waveform = waveform\n\n        const canvasElement = document.getElementById(visualizerOptions.canvasElementId) as HTMLCanvasElement\n\n        waveform.setCanvasElement(canvasElement)\n\n        const waveCanvasContext = waveform.getCanvasContext()\n\n        const linearGradiantTopPeaks = waveCanvasContext.createLinearGradient(0,0,0,50)\n\n        linearGradiantTopPeaks.addColorStop(0, 'yellow')\n        linearGradiantTopPeaks.addColorStop(1, 'red')\n\n        const linearGradiantBottomPeaks = waveCanvasContext.createLinearGradient(0,50,0,100)\n\n        linearGradiantBottomPeaks.addColorStop(0, 'orange')\n        linearGradiantBottomPeaks.addColorStop(1, 'yellow')\n\n        const solidColorTopProgressFillStyle = 'red'\n        const solidColorBottomProgressFillStyle = 'orange'\n\n        waveform.setLayoutOptions({\n            peakTopFillStyle: linearGradiantTopPeaks,\n            peakBottomFillStyle: linearGradiantBottomPeaks,\n            peakTopProgressFillStyle: solidColorTopProgressFillStyle,\n            peakBottomProgressFillStyle: solidColorBottomProgressFillStyle,\n        })\n\n    }\n\n    public draw(playingProgress: number): void {\n\n        this.waveform.draw(playingProgress)\n\n    }\n\n}"]}